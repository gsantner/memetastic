apply plugin: 'com.android.application'

ext {
    version_sdk = [
        compileSdk : 26,
        buildTools : "26.0.1",
        minSdk     : 14,
        //targetSdk: compileSdk,
    ]
    version_sdk.targetSdk = version_sdk.compileSdk
    version_lib = [
        appcompat   : "26.0.0",
        butterknife : "8.7.0",
    ]
}

android {
    compileSdkVersion version_sdk.compileSdk
    buildToolsVersion version_sdk.buildTools

    defaultConfig {
        minSdkVersion version_sdk.minSdk
        targetSdkVersion version_sdk.targetSdk

        versionCode 30
        versionName "1.2.0"

        applicationId "io.github.gsantner.memetastic"
        resValue 'string', 'app_name', "MemeTastic"
        manifestPlaceholders = [appIcon: "@drawable/ic_launcher"]

        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        flavorDefault {
        }
        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }
        flavorTest {
            applicationId "io.github.gsantner.memetastic.test"
            resValue 'string', 'app_name', "MemeTestic"
            manifestPlaceholders = [appIcon: "@drawable/ic_launcher_test"]
            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = new Date().format('yyMMdd')
            buildConfigField "boolean", "IS_TEST_BUILD", "true"
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    sourceSets { main { assets.srcDirs = ['src/main/assets', '../assets'] } }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'


    // Android standard libs
    compile "com.android.support:appcompat-v7:${version_lib.appcompat}"
    compile "com.android.support:design:${version_lib.appcompat}"
    compile "com.android.support:support-v4:${version_lib.appcompat}"
    compile "com.android.support:cardview-v7:${version_lib.appcompat}"
    compile "com.android.support:recyclerview-v7:${version_lib.appcompat}"

    // UI libraries
    compile 'com.github.DASAR:ShiftColorPicker:v0.5'

    // Tool libraries
    compile "com.jakewharton:butterknife:${version_lib.butterknife}"

    annotationProcessor "com.jakewharton:butterknife-compiler:${version_lib.butterknife}"
}

final String RAW_DIR = "app/src/main/res/raw"
final String[] ROOT_TO_RAW_COPYFILES = ["README.md", "LICENSE.txt", "CHANGELOG.md", "CONTRIBUTORS.md"]

// Called before building
task copyRepoFiles(type: Copy) {

    // Copy files over to raw dir
    from rootProject.files(ROOT_TO_RAW_COPYFILES)
    into RAW_DIR.replaceFirst("app/", "")
    rename { String fileName ->
        fileName.replace(fileName, fileName.toLowerCase())
    }
}
tasks.copyRepoFiles.execute()
